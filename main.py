import json
from utils.facebook_api import listen_messages, send_message
from utils.commands import handle_command
from utils.emotion_handler import detect_emotion
from utils.generator import generate_content

# üîß ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶≤‡ßã‡¶°
with open("config.json", "r", encoding="utf-8") as f:
    config = json.load(f)

BOT_NAME = config["bot_name"]
BOT_BANGLA_NAME = config.get("bot_bangla_name", "‡¶ú‡¶æ‡¶®")
OWNER_NAME = config["owner_name"]
PREFIX = config["prefix"]
ALLOWED_USERS = list(map(str, config["allowed_users"]))
OWNER_UIDS = list(map(str, config.get("OWNER", [])))
OPERATOR_UIDS = list(map(str, config.get("OPERATOR", [])))
ADMIN_UIDS = list(map(str, config.get("ADMINBOT", [])))
CONTACT_INFO = config.get("contact", {})
EMOTION_MODE = config.get("emotion_mode", False)
LANG = config.get("language", "bn")

# ‚ù§Ô∏è Relationship config
RELATIONSHIP = config.get("relationship", {})
INTIMATE_MODE = RELATIONSHIP.get("intimate_mode", {})
PRIVATE_BEHAVIOR = RELATIONSHIP.get("private_behavior", "")
PUBLIC_BEHAVIOR = RELATIONSHIP.get("public_behavior", "")
COMMANDS_BEHAVIOR = RELATIONSHIP.get("commands_behavior", {})
EMOTIONS = RELATIONSHIP.get("emotions", {})
CEO_UID = str(RELATIONSHIP.get("ceo_uid", "100015569688497"))

print(f"ü§ñ {BOT_BANGLA_NAME} ({BOT_NAME}) ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡ßü‡ßá‡¶õ‡ßá... ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï: {OWNER_NAME}")

# üì© ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶™‡ßÅ‡¶∞‡¶æ‡¶®‡ßã + ‡¶®‡¶§‡ßÅ‡¶® romantic logic ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§)
def process_message(msg):
    sender = str(msg["sender_id"])
    text = msg["text"].strip()

    # ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶®‡ßü? ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶á ‡¶ï‡¶∞‡¶¨‡ßá ‡¶®‡¶æ
    if sender not in ALLOWED_USERS:
        print(f"‚ùå ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶®‡ßá‡¶á: {sender}")
        return

    # ‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶¨‡ßá
    if text.startswith(PREFIX):
        command = text[len(PREFIX):].strip()
        try:
            response = handle_command(command, sender)
        except TypeError:
            response = handle_command(command)
    else:
        # ‡¶Ø‡¶¶‡¶ø CEO ‡¶π‡ßü, ‡¶∞‡ßã‡¶Æ‡¶æ‡¶®‡ßç‡¶ü‡¶ø‡¶ï ‡¶á‡¶®‡ßç‡¶ü‡¶ø‡¶Æ‡ßá‡¶ü ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏ ‡¶¶‡¶ø‡¶¨‡ßá
        if sender == CEO_UID:
            matched = False

            # ‚úÖ Step 1: ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßã (‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶¶‡ßá‡ßü‡¶æ)
            if "‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏" in text:
                response = f"ü•∞ ‡¶ú‡¶æ‡¶® ‡¶∏‡¶¨‡¶∏‡¶Æ‡ßü ‡¶π‡¶æ‡¶®‡¶ø‡¶ï‡ßá ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡ßá, {OWNER_NAME}! ‚ù§Ô∏è"
                matched = True
            elif "‡¶ï‡ßã‡¶•‡¶æ‡ßü" in text:
                response = f"‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã ‡¶∏‡¶¨‡¶∏‡¶Æ‡ßü ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶®‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá‡¶á ‡¶Ü‡¶õ‡¶ø, ‡¶π‡¶æ‡¶®‡¶ø ü•π"
                matched = True

            # ‚úÖ Step 2: ‡¶ï‡¶®‡¶´‡¶ø‡¶ó ‡¶•‡ßá‡¶ï‡ßá intimate trigger ‡¶Æ‡¶ø‡¶≤‡ßá ‡¶ó‡ßá‡¶≤‡ßá
            if not matched:
                for trigger in COMMANDS_BEHAVIOR.get("intimate_response_trigger", []):
                    if trigger in text:
                        response = generate_content(f"[INTIMATE_MODE_ON] {text}", emotion="love")
                        matched = True
                        break

            # ‚úÖ Step 3: ‡¶ï‡¶ø‡¶ö‡ßç‡¶õ‡ßÅ ‡¶®‡¶æ ‡¶Æ‡¶ø‡¶≤‡¶≤‡ßá Emotion ‡¶¶‡¶ø‡ßü‡ßá ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü ‡¶ï‡¶∞‡ßã
            if not matched:
                emotion = detect_emotion(text) if EMOTION_MODE else None
                response = generate_content(text, emotion)

            # Fallback
            if not response:
                response = f"‚ù§Ô∏è ‡¶π‡¶æ‡¶®‡¶ø {OWNER_NAME}, ‡¶ú‡¶æ‡¶® ‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡•§"

        else:
            # ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßá‡¶â ‡¶π‡¶≤‡ßá ‡¶®‡¶∞‡¶Æ‡¶æ‡¶≤ Emotion/AI ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏
            emotion = detect_emotion(text) if EMOTION_MODE else None
            response = generate_content(text, emotion)

            if not response:
                response = f"‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã, ‡¶Ü‡¶Æ‡¶ø {BOT_NAME}‡•§ ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?"

    # ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏ ‡¶™‡¶æ‡¶†‡¶æ‡¶¨‡ßá
    send_message(sender, response)

# ‚úÖ ‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá
if __name__ == "__main__":
    listen_messages(callback=process_message)
